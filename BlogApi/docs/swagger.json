{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/blog-api/api/comments/{id}": {
            "delete": {
                "description": "Deletes a specific comment from a blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment from a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not the comment owner",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse403"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostCommentResponse500"
                        }
                    }
                }
            }
        },
        "/blog-api/api/posts": {
            "get": {
                "description": "Retrieves a list of blog posts with optional filtering, pagination and sorting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blog"
                ],
                "summary": "Get blog posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current_page",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields",
                        "name": "sort_query",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Blog post IDs",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "dateTimeFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "dateTimeTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Author IDs",
                        "name": "authorIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Visibility status",
                        "name": "visible",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog posts retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostsResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostsResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostsResponse401"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostsResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new blog post with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blog"
                ],
                "summary": "Create a new blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Blog post details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post created successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostResponse401"
                        }
                    },
                    "500": {
                        "description": "Server error during creation",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostResponse500"
                        }
                    }
                }
            }
        },
        "/blog-api/api/posts/{id}": {
            "get": {
                "description": "Retrieves a specific blog post by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blog"
                ],
                "summary": "Get a blog post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostResponse200"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostResponse500"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing blog post with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blog"
                ],
                "summary": "Update a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated blog post details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post updated successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not the post owner",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse403"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during update",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateBlogPostResponse500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blog"
                ],
                "summary": "Delete a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized to delete",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse403"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteBlogPostResponse500"
                        }
                    }
                }
            }
        },
        "/blog-api/api/posts/{id}/comments": {
            "get": {
                "description": "Retrieves all comments for a specific blog post with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get comments for a blog post",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by blog post IDs",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by user IDs",
                        "name": "user_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter from date",
                        "name": "date_time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter to date",
                        "name": "date_time_to",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields (field:asc|desc)",
                        "name": "sort_fields",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostCommentsResponse200"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostCommentsResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetBlogPostCommentsResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new comment on a specific blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create a comment on a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment created successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentResponse401"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during creation",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateBlogPostCommentResponse500"
                        }
                    }
                }
            }
        },
        "/blog-api/api/posts/{id}/likes": {
            "get": {
                "description": "Retrieves the total number of likes for a specific blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Get likes count for a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Likes count retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetLikesForBlogPostResponse200"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetLikesForBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetLikesForBlogPostResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a like to a specific blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Like a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like added successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateLikeForBlogPostResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateLikeForBlogPostResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateLikeForBlogPostResponse401"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateLikeForBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during creation",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateLikeForBlogPostResponse500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a like from a specific blog post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Unlike a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like removed successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteLikeForBlogPostResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteLikeForBlogPostResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteLikeForBlogPostResponse401"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteLikeForBlogPostResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteLikeForBlogPostResponse500"
                        }
                    }
                }
            }
        },
        "/blog-api/api/tags/{id}": {
            "get": {
                "description": "Retrieves a list of all unique tags used in blog posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all unique tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields (field:asc|desc)",
                        "name": "sort_fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetTagsResponse200"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetTagsResponse500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contract.CreateBlogPostCommentRequest": {
            "type": "object",
            "required": [
                "blogPostId",
                "description"
            ],
            "properties": {
                "blogPostId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "description": {
                    "type": "string",
                    "example": "This is a great blog post!"
                }
            }
        },
        "contract.CreateBlogPostCommentResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Comment added successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateBlogPostCommentResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostCommentResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostCommentResponse404": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostCommentResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while adding comment"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostRequest": {
            "type": "object",
            "required": [
                "content",
                "heading",
                "pageTitle",
                "shortDescription",
                "urlHandle"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Blog post content..."
                },
                "featuredImageUrl": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "heading": {
                    "type": "string",
                    "example": "Blog Post Title"
                },
                "pageTitle": {
                    "type": "string",
                    "example": "Page Title"
                },
                "shortDescription": {
                    "type": "string",
                    "example": "Short description"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"tech\"",
                        "\"programming\"]"
                    ]
                },
                "urlHandle": {
                    "type": "string",
                    "example": "blog-post-title"
                },
                "visible": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateBlogPostResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Blog post created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateBlogPostResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateBlogPostResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while creating blog post"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateLikeForBlogPostResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Like added successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateLikeForBlogPostResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateLikeForBlogPostResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateLikeForBlogPostResponse404": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateLikeForBlogPostResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while adding like"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Comment deleted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Comment not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostCommentResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while deleting comment"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post deleted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteBlogPostResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteBlogPostResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while deleting blog post"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteLikeForBlogPostResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Like removed successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteLikeForBlogPostResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteLikeForBlogPostResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteLikeForBlogPostResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Like not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteLikeForBlogPostResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while removing like"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostCommentsResponse200": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "description": "todo",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Comments retrieved successfully"
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_items": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "contract.GetBlogPostCommentsResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostCommentsResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving comments"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostResponse200": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "example": "John Doe"
                },
                "content": {
                    "type": "string",
                    "example": "Blog post content..."
                },
                "featuredImageUrl": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "heading": {
                    "type": "string",
                    "example": "Blog Post Title"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Blog post retrieved successfully"
                },
                "pageTitle": {
                    "type": "string",
                    "example": "Page Title"
                },
                "publishedDate": {
                    "type": "string",
                    "example": "2023-12-12"
                },
                "shortDescription": {
                    "type": "string",
                    "example": "Short description"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "urlHandle": {
                    "type": "string",
                    "example": "blog-post-title"
                },
                "visible": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetBlogPostResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving blog post"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostsResponse200": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer",
                            "example": 1
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "author": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Blog post content..."
                                    },
                                    "featuredImageUrl": {
                                        "type": "string",
                                        "example": "https://example.com/image.jpg"
                                    },
                                    "heading": {
                                        "type": "string",
                                        "example": "Blog Post Title"
                                    },
                                    "id": {
                                        "type": "string",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "pageTitle": {
                                        "type": "string",
                                        "example": "Page Title"
                                    },
                                    "publishedDate": {
                                        "type": "string",
                                        "example": "2023-12-12"
                                    },
                                    "shortDescription": {
                                        "type": "string",
                                        "example": "Short description"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "[\"tech\"",
                                            "\"programming\"]"
                                        ]
                                    },
                                    "urlHandle": {
                                        "type": "string",
                                        "example": "blog-post-title"
                                    },
                                    "visible": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        },
                        "page_size": {
                            "type": "integer",
                            "example": 10
                        },
                        "total_items": {
                            "type": "integer",
                            "example": 100
                        },
                        "total_pages": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Users retrieved successfully"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "contract.GetBlogPostsResponse400": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostsResponse401": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetBlogPostsResponse500": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving blog posts"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetLikesForBlogPostResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Likes retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "totalCount": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "contract.GetLikesForBlogPostResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "totalCount": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "contract.GetLikesForBlogPostResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving likes"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "totalCount": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "contract.GetTagsResponse200": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Tags retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetTagsResponse500": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving tags"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateBlogPostRequest": {
            "type": "object",
            "required": [
                "author",
                "content",
                "heading",
                "id",
                "jwtToken",
                "pageTitle",
                "publishedDate",
                "shortDescription",
                "urlHandle"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "example": "John Doe"
                },
                "content": {
                    "type": "string",
                    "example": "Updated blog post content..."
                },
                "featuredImageUrl": {
                    "type": "string",
                    "example": "https://example.com/updated-image.jpg"
                },
                "heading": {
                    "type": "string",
                    "example": "Updated Blog Post Title"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "jwtToken": {
                    "$ref": "#/definitions/models.JwtToken"
                },
                "pageTitle": {
                    "type": "string",
                    "example": "Updated Page Title"
                },
                "publishedDate": {
                    "type": "string",
                    "example": "2023-12-12"
                },
                "shortDescription": {
                    "type": "string",
                    "example": "Updated short description"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"tech\"",
                        "\"programming\"]"
                    ]
                },
                "urlHandle": {
                    "type": "string",
                    "example": "updated-blog-post-title"
                },
                "visible": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.UpdateBlogPostResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post updated successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.UpdateBlogPostResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateBlogPostResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateBlogPostResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateBlogPostResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Blog post not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateBlogPostResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while updating blog post"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.JwtToken": {
            "type": "object"
        }
    }
}