definitions:
  contract.AddUrlToCarOfferResponse200:
    properties:
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      message:
        example: Image added successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.AddUrlToCarOfferResponse400:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Invalid request format
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.AddUrlToCarOfferResponse401:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.AddUrlToCarOfferResponse403:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.AddUrlToCarOfferResponse404:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Car offer not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.AddUrlToCarOfferResponse500:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Server error during addition
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOfferRequest:
    properties:
      driveDetails:
        example: AWD
        type: string
      engineDetails:
        example: 2.0L Turbo
        type: string
      featuredImageUrl:
        example: https://example.com/image.jpg
        type: string
      gearboxDetails:
        example: Automatic
        type: string
      heading:
        example: Car Offer Title
        type: string
      horsepower:
        example: "300"
        type: string
      imageUrls:
        example:
        - '["https://example.com/image1.jpg"]'
        items:
          type: string
        type: array
      oneMonthPrice:
        example: 2000
        type: number
      oneNormalDayPrice:
        example: 100
        type: number
      oneWeekPrice:
        example: 600
        type: number
      oneWeekendDayPrice:
        example: 150
        type: number
      shortDescription:
        example: Short description
        type: string
      tags:
        example:
        - '["luxury"'
        - '"sports"]'
        items:
          type: string
        type: array
      urlHandle:
        example: car-offer-title
        type: string
      visible:
        example: true
        type: boolean
      yearOfProduction:
        example: 2023
        type: integer
    required:
    - heading
    - shortDescription
    - urlHandle
    type: object
  contract.CreateCarOfferResponse200:
    properties:
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      message:
        example: Car offer created successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.CreateCarOfferResponse400:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOfferResponse401:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOfferResponse500:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Internal server error while creating car offer
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOrderRequest:
    properties:
      carOfferId:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      deliveryLocation:
        example: City Center
        type: string
      endDate:
        example: "2024-03-20T12:00:00Z"
        type: string
      numOfDrivers:
        example: 2
        type: integer
      returnLocation:
        example: City Center
        type: string
      startDate:
        example: "2024-03-15T14:30:00Z"
        type: string
      status:
        example: pending
        type: string
      totalCost:
        example: 750
        type: number
    required:
    - carOfferId
    - endDate
    - startDate
    type: object
  contract.CreateCarOrderResponse200:
    properties:
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      message:
        example: Car order created successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.CreateCarOrderResponse400:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOrderResponse401:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.CreateCarOrderResponse500:
    properties:
      id:
        example: ""
        type: string
      message:
        example: Internal server error while creating car order
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOfferResponse200:
    properties:
      message:
        example: Car offer deleted successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.DeleteCarOfferResponse400:
    properties:
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOfferResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOfferResponse403:
    properties:
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOfferResponse404:
    properties:
      message:
        example: Car offer not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOfferResponse500:
    properties:
      message:
        example: Internal server error while deleting car offer
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOrderResponse200:
    properties:
      message:
        example: Car order deleted successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.DeleteCarOrderResponse400:
    properties:
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOrderResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOrderResponse403:
    properties:
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOrderResponse404:
    properties:
      message:
        example: Car order not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteCarOrderResponse500:
    properties:
      message:
        example: Internal server error while deleting car order
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse200:
    properties:
      message:
        example: Image added successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse400:
    properties:
      message:
        example: Image not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse403:
    properties:
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse404:
    properties:
      message:
        example: Car offer not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.DeleteImageFromCarOfferResponse500:
    properties:
      message:
        example: Internal server error
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOfferResponse200:
    properties:
      car_offer:
        properties:
          deliveryLocation:
            example: Airport
            type: string
          driveDetails:
            example: AWD
            type: string
          engineDetails:
            example: 2.0L Turbo
            type: string
          featuredImageUrl:
            example: https://example.com/image.jpg
            type: string
          gearboxDetails:
            example: Automatic
            type: string
          heading:
            example: Car Offer Title
            type: string
          horsepower:
            example: "300"
            type: string
          id:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
          imageUrls:
            example:
            - '["https://example.com/image1.jpg"]'
            items:
              type: string
            type: array
          oneMonthPrice:
            example: 2000
            type: number
          oneNormalDayPrice:
            example: 100
            type: number
          oneWeekPrice:
            example: 600
            type: number
          oneWeekendDayPrice:
            example: 150
            type: number
          shortDescription:
            example: Short description
            type: string
          tags:
            example:
            - '["luxury"'
            - '"sports"]'
            items:
              type: string
            type: array
          urlHandle:
            example: car-offer-title
            type: string
          visible:
            example: true
            type: boolean
          yearOfProduction:
            example: 2023
            type: integer
        type: object
      message:
        example: Car offer retrieved successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.GetCarOfferResponse404:
    properties:
      car_offer:
        type: object
      message:
        example: Car offer not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOfferResponse500:
    properties:
      car_offer:
        type: object
      message:
        example: Internal server error while retrieving car offer
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOffersResponse200:
    properties:
      current_page:
        example: 1
        type: integer
      items:
        items:
          properties:
            featuredImageUrl:
              example: https://example.com/image.jpg
              type: string
            heading:
              example: Car Offer Title
              type: string
            id:
              example: 123e4567-e89b-12d3-a456-426614174000
              type: string
            publishedDate:
              example: "2023-12-12"
              type: string
            shortDescription:
              example: Short description
              type: string
            tags:
              example:
              - '["luxury"'
              - '"sports"]'
              items:
                type: string
              type: array
            urlHandle:
              example: car-offer-title
              type: string
            visible:
              example: true
              type: boolean
          type: object
        type: array
      message:
        example: Car offers retrieved successfully
        type: string
      page_size:
        example: 10
        type: integer
      success:
        example: true
        type: boolean
      total_items:
        example: 100
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  contract.GetCarOffersResponse400:
    properties:
      items:
        items:
          type: object
        type: array
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOffersResponse500:
    properties:
      items:
        items:
          type: object
        type: array
      message:
        example: Internal server error while retrieving car offers
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOrderResponse200:
    properties:
      car_order:
        properties:
          carOfferId:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
          deliveryLocation:
            example: City Center
            type: string
          endDate:
            example: "2023-12-19"
            type: string
          id:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
          numOfDrivers:
            example: 2
            type: integer
          returnLocation:
            example: City Center
            type: string
          startDate:
            example: "2023-12-12"
            type: string
          totalCost:
            example: 750
            type: number
          userId:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        type: object
      message:
        example: Car order retrieved successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.GetCarOrderResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOrderResponse404:
    properties:
      car_order:
        type: object
      message:
        example: Car order not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOrderResponse500:
    properties:
      car_order:
        type: object
      message:
        example: Internal server error while retrieving car order
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOrdersResponse200:
    properties:
      current_page:
        example: 1
        type: integer
      items:
        items:
          properties:
            carOfferId:
              example: 123e4567-e89b-12d3-a456-426614174000
              type: string
            deliveryLocation:
              example: City Center
              type: string
            endDate:
              example: "2023-12-19"
              type: string
            id:
              example: 123e4567-e89b-12d3-a456-426614174000
              type: string
            numOfDrivers:
              example: 2
              type: integer
            returnLocation:
              example: City Center
              type: string
            startDate:
              example: "2023-12-12"
              type: string
            totalCost:
              example: 750
              type: number
            userId:
              example: 123e4567-e89b-12d3-a456-426614174000
              type: string
          type: object
        type: array
      message:
        example: Car orders retrieved successfully
        type: string
      page_size:
        example: 10
        type: integer
      success:
        example: true
        type: boolean
      total_items:
        example: 100
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  contract.GetCarOrdersResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetCarOrdersResponse500:
    properties:
      items:
        items:
          type: object
        type: array
      message:
        example: Internal server error while retrieving car orders
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.GetTagsResponse200:
    properties:
      items:
        items:
          type: object
        type: array
      message:
        example: Tags retrieved successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.GetTagsResponse500:
    properties:
      items:
        items:
          type: object
        type: array
      message:
        example: Internal server error while retrieving tags
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOfferRequest:
    properties:
      driveDetails:
        example: RWD
        type: string
      engineDetails:
        example: 3.0L Twin-Turbo
        type: string
      featuredImageUrl:
        example: https://example.com/updated-image.jpg
        type: string
      gearboxDetails:
        example: 8-Speed Automatic
        type: string
      heading:
        example: Updated Car Offer Title
        type: string
      horsepower:
        example: "350"
        type: string
      oneMonthPrice:
        example: 2500
        type: number
      oneNormalDayPrice:
        example: 120
        type: number
      oneWeekPrice:
        example: 700
        type: number
      oneWeekendDayPrice:
        example: 180
        type: number
      publishedDate:
        example: "2023-12-12"
        type: string
      shortDescription:
        example: Updated short description
        type: string
      tags:
        example:
        - '["luxury"'
        - '"sports"]'
        items:
          type: string
        type: array
      urlHandle:
        example: updated-car-offer-title
        type: string
      visible:
        example: true
        type: boolean
      yearOfProduction:
        example: 2023
        type: integer
    required:
    - heading
    - shortDescription
    - urlHandle
    type: object
  contract.UpdateCarOfferResponse200:
    properties:
      message:
        example: Car offer updated successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.UpdateCarOfferResponse400:
    properties:
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOfferResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOfferResponse403:
    properties:
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOfferResponse404:
    properties:
      message:
        example: Car offer not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOfferResponse500:
    properties:
      message:
        example: Internal server error while updating car offer
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOrderRequest:
    properties:
      carOfferId:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      deliveryLocation:
        example: City Center
        type: string
      endDate:
        example: "2024-03-20T12:00:00Z"
        type: string
      numOfDrivers:
        example: 3
        type: integer
      returnLocation:
        example: City Center
        type: string
      startDate:
        example: "2024-03-15T14:30:00Z"
        type: string
      status:
        example: pending
        type: string
      totalCost:
        example: 900
        type: number
      userId:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    required:
    - carOfferId
    - endDate
    - startDate
    - userId
    type: object
  contract.UpdateCarOrderResponse200:
    properties:
      message:
        example: Car order updated successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  contract.UpdateCarOrderResponse400:
    properties:
      message:
        example: Invalid request parameters
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOrderResponse401:
    properties:
      message:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOrderResponse403:
    properties:
      message:
        example: Forbidden - Not authorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOrderResponse404:
    properties:
      message:
        example: Car order not found
        type: string
      success:
        example: false
        type: boolean
    type: object
  contract.UpdateCarOrderResponse500:
    properties:
      message:
        example: Internal server error while updating car order
        type: string
      success:
        example: false
        type: boolean
    type: object
info:
  contact: {}
paths:
  /rental-api/api/car-offers:
    get:
      consumes:
      - application/json
      description: Retrieves a list of car offers with optional filtering, pagination
        and sorting
      parameters:
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Current page
        in: query
        name: current_page
        type: integer
      - collectionFormat: csv
        description: Filter by car offer IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      - description: Filter from date
        in: query
        name: date_time_from
        type: string
      - description: Filter to date
        in: query
        name: date_time_to
        type: string
      - collectionFormat: csv
        description: Filter by tags
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Filter by visibility
        in: query
        name: visible
        type: string
      - collectionFormat: csv
        description: Sort fields (field:asc|desc)
        in: query
        items:
          type: string
        name: sort_fields
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Car offers retrieved successfully
          schema:
            $ref: '#/definitions/contract.GetCarOffersResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.GetCarOffersResponse400'
        "500":
          description: Server error during retrieval
          schema:
            $ref: '#/definitions/contract.GetCarOffersResponse500'
      summary: Get car offers
      tags:
      - car-offers
    post:
      consumes:
      - application/json
      description: Creates a new car offer with the provided details
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car offer details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.CreateCarOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car offer created successfully
          schema:
            $ref: '#/definitions/contract.CreateCarOfferResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.CreateCarOfferResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.CreateCarOfferResponse401'
        "500":
          description: Server error during creation
          schema:
            $ref: '#/definitions/contract.CreateCarOfferResponse500'
      summary: Create a new car offer
      tags:
      - car-offers
  /rental-api/api/car-offers/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing car offer
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car offer deleted successfully
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse403'
        "404":
          description: Car offer not found
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse404'
        "500":
          description: Server error during deletion
          schema:
            $ref: '#/definitions/contract.DeleteCarOfferResponse500'
      summary: Delete a car offer
      tags:
      - car-offers
    get:
      consumes:
      - application/json
      description: Retrieves a specific car offer by its ID
      parameters:
      - description: Car Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car offer retrieved successfully
          schema:
            $ref: '#/definitions/contract.GetCarOfferResponse200'
        "404":
          description: Car offer not found
          schema:
            $ref: '#/definitions/contract.GetCarOfferResponse404'
        "500":
          description: Server error during retrieval
          schema:
            $ref: '#/definitions/contract.GetCarOfferResponse500'
      summary: Get a car offer by ID
      tags:
      - car-offers
    put:
      consumes:
      - application/json
      description: Updates an existing car offer with the provided details
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Offer ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated car offer details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.UpdateCarOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car offer updated successfully
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse403'
        "404":
          description: Car offer not found
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse404'
        "500":
          description: Server error during update
          schema:
            $ref: '#/definitions/contract.UpdateCarOfferResponse500'
      summary: Update a car offer
      tags:
      - car-offers
  /rental-api/api/car-offers/images/{carOfferId}/{imageId}:
    delete:
      consumes:
      - application/json
      description: Deletes an image from a car offer
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Offer ID
        in: path
        name: carOfferId
        required: true
        type: string
      - description: Image ID (UUID)
        in: path
        name: imageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image deleted successfully
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse403'
        "404":
          description: Image or car offer not found
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse404'
        "500":
          description: Server error during deletion
          schema:
            $ref: '#/definitions/contract.DeleteImageFromCarOfferResponse500'
      summary: Delete image from car offer
      tags:
      - car-images
  /rental-api/api/car-offers/images/{offerId}/{imageId}:
    post:
      consumes:
      - application/json
      description: Adds a new image URL to an existing car offer
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Offer ID
        in: path
        name: offerId
        required: true
        type: string
      - description: Image ID
        in: path
        name: imageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image added successfully
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse403'
        "404":
          description: Car offer not found
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse404'
        "500":
          description: Server error during addition
          schema:
            $ref: '#/definitions/contract.AddUrlToCarOfferResponse500'
      summary: Add image to car offer
      tags:
      - car-images
  /rental-api/api/car-offers/tags/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all unique tags used in car offer
      parameters:
      - description: Car Offer ID
        in: path
        name: id
        type: string
      - collectionFormat: csv
        description: Sort fields (field:asc|desc)
        in: query
        items:
          type: string
        name: sort_fields
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Tags retrieved successfully
          schema:
            $ref: '#/definitions/contract.GetTagsResponse200'
        "500":
          description: Server error during retrieval
          schema:
            $ref: '#/definitions/contract.GetTagsResponse500'
      summary: Get all unique tags
      tags:
      - car-offers
  /rental-api/api/car-orders:
    get:
      consumes:
      - application/json
      description: Retrieves a list of car orders with optional filtering, pagination
        and sorting
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Current page
        in: query
        name: current_page
        type: integer
      - description: Filter by start date
        in: query
        name: start_date
        type: string
      - description: Filter by end date
        in: query
        name: end_date
        type: string
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Filter by car offer ID
        in: query
        name: car_offer_id
        type: string
      - collectionFormat: csv
        description: Filter by statuses
        in: query
        items:
          type: string
        name: statuses
        type: array
      - description: Type of date filter
        in: query
        name: date_filter_type
        type: string
      - collectionFormat: csv
        description: Sort fields (field:asc|desc)
        in: query
        items:
          type: string
        name: sort_fields
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Car orders retrieved successfully
          schema:
            $ref: '#/definitions/contract.GetCarOrdersResponse200'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.GetCarOrdersResponse401'
        "500":
          description: Server error during retrieval
          schema:
            $ref: '#/definitions/contract.GetCarOrdersResponse500'
      summary: Get car orders
      tags:
      - car-orders
    post:
      consumes:
      - application/json
      description: Creates a new car order with the provided details
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car order details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.CreateCarOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car order created successfully
          schema:
            $ref: '#/definitions/contract.CreateCarOrderResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.CreateCarOrderResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.CreateCarOrderResponse401'
        "500":
          description: Server error during creation
          schema:
            $ref: '#/definitions/contract.CreateCarOrderResponse500'
      summary: Create a new car order
      tags:
      - car-orders
  /rental-api/api/car-orders/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing car order
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car order deleted successfully
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse403'
        "404":
          description: Car order not found
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse404'
        "500":
          description: Server error during deletion
          schema:
            $ref: '#/definitions/contract.DeleteCarOrderResponse500'
      summary: Delete a car order
      tags:
      - car-orders
    get:
      consumes:
      - application/json
      description: Retrieves a specific car order by its ID
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car order retrieved successfully
          schema:
            $ref: '#/definitions/contract.GetCarOrderResponse200'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.GetCarOrderResponse401'
        "404":
          description: Car order not found
          schema:
            $ref: '#/definitions/contract.GetCarOrderResponse404'
        "500":
          description: Server error during retrieval
          schema:
            $ref: '#/definitions/contract.GetCarOrderResponse500'
      summary: Get a car order by ID
      tags:
      - car-orders
    put:
      consumes:
      - application/json
      description: Updates an existing car order with the provided details
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: Car Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated car order details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/contract.UpdateCarOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car order updated successfully
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse200'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse401'
        "403":
          description: Forbidden - Not authorized
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse403'
        "404":
          description: Car order not found
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse404'
        "500":
          description: Server error during update
          schema:
            $ref: '#/definitions/contract.UpdateCarOrderResponse500'
      summary: Update a car order
      tags:
      - car-orders
swagger: "2.0"
