// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rental-api/api/car-offers": {
            "get": {
                "description": "Retrieves a list of car offers with optional filtering, pagination and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Get car offers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current_page",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by car offer IDs",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter from date",
                        "name": "date_time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter to date",
                        "name": "date_time_to",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by visibility",
                        "name": "visible",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields (field:asc|desc)",
                        "name": "sort_fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offers retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOffersResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOffersResponse400"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOffersResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new car offer with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Create a new car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Car offer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offer created successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOfferResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOfferResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOfferResponse401"
                        }
                    },
                    "500": {
                        "description": "Server error during creation",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOfferResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-offers/images/{carOfferId}": {
            "get": {
                "description": "Retrieves all images for a specific car offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-images"
                ],
                "summary": "Get all images for a car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "carOfferId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Images retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse403"
                        }
                    },
                    "404": {
                        "description": "Image or car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetAllImagesResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-offers/images/{carOfferId}/{imageId}": {
            "delete": {
                "description": "Deletes an image from a car offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-images"
                ],
                "summary": "Delete image from car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "carOfferId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID (UUID)",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse403"
                        }
                    },
                    "404": {
                        "description": "Image or car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteImageFromCarOfferResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-offers/images/{offerId}/{imageId}": {
            "post": {
                "description": "Adds a new image URL to an existing car offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-images"
                ],
                "summary": "Add image to car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "offerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image added successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse403"
                        }
                    },
                    "404": {
                        "description": "Car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during addition",
                        "schema": {
                            "$ref": "#/definitions/contract.AddUrlToCarOfferResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-offers/tags": {
            "get": {
                "description": "Retrieves a list of all unique tags used in car offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Get all unique tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "carOfferId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields (field:asc|desc)",
                        "name": "sort_fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetTagsResponse200"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetTagsResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-offers/{id}": {
            "get": {
                "description": "Retrieves a specific car offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Get a car offer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offer retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOfferResponse200"
                        }
                    },
                    "404": {
                        "description": "Car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOfferResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOfferResponse500"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing car offer with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Update a car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated car offer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offer updated successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse403"
                        }
                    },
                    "404": {
                        "description": "Car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during update",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOfferResponse500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing car offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-offers"
                ],
                "summary": "Delete a car offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offer deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse403"
                        }
                    },
                    "404": {
                        "description": "Car offer not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOfferResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-orders": {
            "get": {
                "description": "Retrieves a list of car orders with optional filtering, pagination and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-orders"
                ],
                "summary": "Get car orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by car offer ID",
                        "name": "car_offer_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by statuses",
                        "name": "statuses",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of date filter",
                        "name": "date_filter_type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Sort fields (field:asc|desc)",
                        "name": "sort_fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car orders retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrdersResponse200"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrdersResponse401"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrdersResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new car order with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-orders"
                ],
                "summary": "Create a new car order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Car order details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car order created successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOrderResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOrderResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOrderResponse401"
                        }
                    },
                    "500": {
                        "description": "Server error during creation",
                        "schema": {
                            "$ref": "#/definitions/contract.CreateCarOrderResponse500"
                        }
                    }
                }
            }
        },
        "/rental-api/api/car-orders/{id}": {
            "get": {
                "description": "Retrieves a specific car order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-orders"
                ],
                "summary": "Get a car order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car order retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrderResponse200"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrderResponse401"
                        }
                    },
                    "404": {
                        "description": "Car order not found",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrderResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during retrieval",
                        "schema": {
                            "$ref": "#/definitions/contract.GetCarOrderResponse500"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing car order with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-orders"
                ],
                "summary": "Update a car order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated car order details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car order updated successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse403"
                        }
                    },
                    "404": {
                        "description": "Car order not found",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during update",
                        "schema": {
                            "$ref": "#/definitions/contract.UpdateCarOrderResponse500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing car order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car-orders"
                ],
                "summary": "Delete a car order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car order deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse200"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse401"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse403"
                        }
                    },
                    "404": {
                        "description": "Car order not found",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse404"
                        }
                    },
                    "500": {
                        "description": "Server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/contract.DeleteCarOrderResponse500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contract.AddUrlToCarOfferResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Image added successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.AddUrlToCarOfferResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request format"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.AddUrlToCarOfferResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.AddUrlToCarOfferResponse403": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.AddUrlToCarOfferResponse404": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.AddUrlToCarOfferResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Server error during addition"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOfferRequest": {
            "type": "object",
            "required": [
                "heading",
                "shortDescription",
                "urlHandle"
            ],
            "properties": {
                "driveDetails": {
                    "type": "string",
                    "example": "AWD"
                },
                "engineDetails": {
                    "type": "string",
                    "example": "2.0L Turbo"
                },
                "featuredImageUrl": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "gearboxDetails": {
                    "type": "string",
                    "example": "Automatic"
                },
                "heading": {
                    "type": "string",
                    "example": "Car Offer Title"
                },
                "horsepower": {
                    "type": "string",
                    "example": "300"
                },
                "imageUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://example.com/image1.jpg\"]"
                    ]
                },
                "oneMonthPrice": {
                    "type": "number",
                    "example": 2000
                },
                "oneNormalDayPrice": {
                    "type": "number",
                    "example": 100
                },
                "oneWeekPrice": {
                    "type": "number",
                    "example": 600
                },
                "oneWeekendDayPrice": {
                    "type": "number",
                    "example": 150
                },
                "shortDescription": {
                    "type": "string",
                    "example": "Short description"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"luxury\"",
                        "\"sports\"]"
                    ]
                },
                "urlHandle": {
                    "type": "string",
                    "example": "car-offer-title"
                },
                "visible": {
                    "type": "boolean",
                    "example": true
                },
                "yearOfProduction": {
                    "type": "integer",
                    "example": 2023
                }
            }
        },
        "contract.CreateCarOfferResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Car offer created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateCarOfferResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOfferResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOfferResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while creating car offer"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOrderRequest": {
            "type": "object",
            "required": [
                "carOfferId",
                "endDate",
                "startDate"
            ],
            "properties": {
                "carOfferId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "deliveryLocation": {
                    "type": "string",
                    "example": "City Center"
                },
                "endDate": {
                    "type": "string",
                    "example": "2024-03-20T12:00:00Z"
                },
                "numOfDrivers": {
                    "type": "integer",
                    "example": 2
                },
                "returnLocation": {
                    "type": "string",
                    "example": "City Center"
                },
                "startDate": {
                    "type": "string",
                    "example": "2024-03-15T14:30:00Z"
                },
                "totalCost": {
                    "type": "number",
                    "example": 750
                }
            }
        },
        "contract.CreateCarOrderResponse200": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "message": {
                    "type": "string",
                    "example": "Car order created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.CreateCarOrderResponse400": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOrderResponse401": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.CreateCarOrderResponse500": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while creating car order"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOfferResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer deleted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteCarOfferResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOfferResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOfferResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOfferResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOfferResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while deleting car offer"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOrderResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car order deleted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteCarOrderResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOrderResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOrderResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOrderResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car order not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteCarOrderResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while deleting car order"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Image added successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Image not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.DeleteImageFromCarOfferResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetAllImagesResponse200": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/image1.jpg",
                        "https://example.com/image2.jpg"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "Images retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetAllImagesResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetAllImagesResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetAllImagesResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetAllImagesResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetAllImagesResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Server error during retrieval"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOfferResponse200": {
            "type": "object",
            "properties": {
                "car_offer": {
                    "type": "object",
                    "properties": {
                        "deliveryLocation": {
                            "type": "string",
                            "example": "Airport"
                        },
                        "driveDetails": {
                            "type": "string",
                            "example": "AWD"
                        },
                        "engineDetails": {
                            "type": "string",
                            "example": "2.0L Turbo"
                        },
                        "featuredImageUrl": {
                            "type": "string",
                            "example": "https://example.com/image.jpg"
                        },
                        "gearboxDetails": {
                            "type": "string",
                            "example": "Automatic"
                        },
                        "heading": {
                            "type": "string",
                            "example": "Car Offer Title"
                        },
                        "horsepower": {
                            "type": "string",
                            "example": "300"
                        },
                        "id": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "imageUrls": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "[\"https://example.com/image1.jpg\"]"
                            ]
                        },
                        "oneMonthPrice": {
                            "type": "number",
                            "example": 2000
                        },
                        "oneNormalDayPrice": {
                            "type": "number",
                            "example": 100
                        },
                        "oneWeekPrice": {
                            "type": "number",
                            "example": 600
                        },
                        "oneWeekendDayPrice": {
                            "type": "number",
                            "example": 150
                        },
                        "shortDescription": {
                            "type": "string",
                            "example": "Short description"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "[\"luxury\"",
                                "\"sports\"]"
                            ]
                        },
                        "urlHandle": {
                            "type": "string",
                            "example": "car-offer-title"
                        },
                        "visible": {
                            "type": "boolean",
                            "example": true
                        },
                        "yearOfProduction": {
                            "type": "integer",
                            "example": 2023
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Car offer retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetCarOfferResponse404": {
            "type": "object",
            "properties": {
                "car_offer": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOfferResponse500": {
            "type": "object",
            "properties": {
                "car_offer": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving car offer"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOffersResponse200": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "featuredImageUrl": {
                                "type": "string",
                                "example": "https://example.com/image.jpg"
                            },
                            "heading": {
                                "type": "string",
                                "example": "Car Offer Title"
                            },
                            "id": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "publishedDate": {
                                "type": "string",
                                "example": "2023-12-12"
                            },
                            "shortDescription": {
                                "type": "string",
                                "example": "Short description"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "example": [
                                    "[\"luxury\"",
                                    "\"sports\"]"
                                ]
                            },
                            "urlHandle": {
                                "type": "string",
                                "example": "car-offer-title"
                            },
                            "visible": {
                                "type": "boolean",
                                "example": true
                            }
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Car offers retrieved successfully"
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_items": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "contract.GetCarOffersResponse400": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOffersResponse500": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving car offers"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOrderResponse200": {
            "type": "object",
            "properties": {
                "car_order": {
                    "type": "object",
                    "properties": {
                        "carOfferId": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "deliveryLocation": {
                            "type": "string",
                            "example": "City Center"
                        },
                        "endDate": {
                            "type": "string",
                            "example": "2023-12-19"
                        },
                        "id": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "numOfDrivers": {
                            "type": "integer",
                            "example": 2
                        },
                        "returnLocation": {
                            "type": "string",
                            "example": "City Center"
                        },
                        "startDate": {
                            "type": "string",
                            "example": "2023-12-12"
                        },
                        "totalCost": {
                            "type": "number",
                            "example": 750
                        },
                        "userId": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Car order retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetCarOrderResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOrderResponse404": {
            "type": "object",
            "properties": {
                "car_order": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Car order not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOrderResponse500": {
            "type": "object",
            "properties": {
                "car_order": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving car order"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOrdersResponse200": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "carOfferId": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "deliveryLocation": {
                                "type": "string",
                                "example": "City Center"
                            },
                            "endDate": {
                                "type": "string",
                                "example": "2023-12-19"
                            },
                            "id": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "numOfDrivers": {
                                "type": "integer",
                                "example": 2
                            },
                            "returnLocation": {
                                "type": "string",
                                "example": "City Center"
                            },
                            "startDate": {
                                "type": "string",
                                "example": "2023-12-12"
                            },
                            "totalCost": {
                                "type": "number",
                                "example": 750
                            },
                            "userId": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Car orders retrieved successfully"
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_items": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "contract.GetCarOrdersResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetCarOrdersResponse500": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving car orders"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.GetTagsResponse200": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Tags retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.GetTagsResponse500": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error while retrieving tags"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOfferRequest": {
            "type": "object",
            "required": [
                "heading",
                "shortDescription",
                "urlHandle"
            ],
            "properties": {
                "driveDetails": {
                    "type": "string",
                    "example": "RWD"
                },
                "engineDetails": {
                    "type": "string",
                    "example": "3.0L Twin-Turbo"
                },
                "featuredImageUrl": {
                    "type": "string",
                    "example": "https://example.com/updated-image.jpg"
                },
                "gearboxDetails": {
                    "type": "string",
                    "example": "8-Speed Automatic"
                },
                "heading": {
                    "type": "string",
                    "example": "Updated Car Offer Title"
                },
                "horsepower": {
                    "type": "string",
                    "example": "350"
                },
                "oneMonthPrice": {
                    "type": "number",
                    "example": 2500
                },
                "oneNormalDayPrice": {
                    "type": "number",
                    "example": 120
                },
                "oneWeekPrice": {
                    "type": "number",
                    "example": 700
                },
                "oneWeekendDayPrice": {
                    "type": "number",
                    "example": 180
                },
                "publishedDate": {
                    "type": "string",
                    "example": "2023-12-12"
                },
                "shortDescription": {
                    "type": "string",
                    "example": "Updated short description"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"luxury\"",
                        "\"sports\"]"
                    ]
                },
                "urlHandle": {
                    "type": "string",
                    "example": "updated-car-offer-title"
                },
                "visible": {
                    "type": "boolean",
                    "example": true
                },
                "yearOfProduction": {
                    "type": "integer",
                    "example": 2023
                }
            }
        },
        "contract.UpdateCarOfferResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer updated successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.UpdateCarOfferResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOfferResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOfferResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOfferResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car offer not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOfferResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while updating car offer"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOrderRequest": {
            "type": "object",
            "required": [
                "carOfferId",
                "endDate",
                "startDate",
                "userId"
            ],
            "properties": {
                "carOfferId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "deliveryLocation": {
                    "type": "string",
                    "example": "City Center"
                },
                "endDate": {
                    "type": "string",
                    "example": "2024-03-20T12:00:00Z"
                },
                "numOfDrivers": {
                    "type": "integer",
                    "example": 3
                },
                "returnLocation": {
                    "type": "string",
                    "example": "City Center"
                },
                "startDate": {
                    "type": "string",
                    "example": "2024-03-15T14:30:00Z"
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "totalCost": {
                    "type": "number",
                    "example": 900
                },
                "userId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "contract.UpdateCarOrderResponse200": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car order updated successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "contract.UpdateCarOrderResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOrderResponse401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOrderResponse403": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Forbidden - Not authorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOrderResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Car order not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "contract.UpdateCarOrderResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error while updating car order"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
